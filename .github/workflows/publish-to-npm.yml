name: Publish to npm

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'package.json'
      - 'tsconfig.json'
      - 'tsconfig.*.json'
      - 'webpack.config.js'
      - 'pnpm-lock.yaml'

  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Check if package needs publishing
        id: check_publish
        run: |
          current_version=$(node -p "require('./package.json').version")
          npm_package_name=$(node -p "require('./package.json').name")
          
          # Check if package exists on npm
          if npm_info=$(npm view $npm_package_name version 2>/dev/null); then
            published_version=$npm_info
          else
            published_version="0.0.0"
            echo "Package not found on npm registry, will publish for first time"
          fi
          
          echo "Current version: $current_version"
          echo "Published version: $published_version"
          
          if [ "$current_version" == "$published_version" ]; then
            echo "No new version. Skipping publish."
            echo "should_publish=false" >> $GITHUB_OUTPUT
          else
            echo "New version available. Proceeding to publish."
            echo "should_publish=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Run linting
        if: steps.check_publish.outputs.should_publish == 'true'
        run: pnpm run lint
        
      - name: Build the project
        if: steps.check_publish.outputs.should_publish == 'true'
        run: pnpm run build
        
      - name: Run tests
        if: steps.check_publish.outputs.should_publish == 'true'
        run: pnpm run test
        
      - name: Publish to npm
        if: steps.check_publish.outputs.should_publish == 'true'
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}